rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{post} {
      function isLoggedIn(){
        return request.auth != null;
      }
      function hasRole(role) {
        return isLoggedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role
      }
      allow write: if isLoggedIn();
      allow update, delete: if isLoggedIn() && (resource.data.author == request.auth.uid);
      allow read: if resource.data.visibility == "public" || (isLoggedIn() && resource.data.visibility == "restricted") || hasRole("admin");
    }
    match /users/{user} {
    	function isLoggedIn(){
        return request.auth != null;
      }
      allow read, create: if true;
      allow update, delete: if isLoggedIn() && request.auth.uid == user;

    }
    allow read, write: if false;
  }
}